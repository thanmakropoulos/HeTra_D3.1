<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SenseLib</name>
    </assembly>
    <members>
        <member name="T:SenseLib.DataFrames.Kinect.SkeletonJoint">
            <summary>Represents a Kinect skeleton joint.</summary>
        </member>
        <member name="F:SenseLib.DataFrames.Kinect.SkeletonJoint.x">
            <summary>The x axis coordinate.</summary>
        </member>
        <member name="F:SenseLib.DataFrames.Kinect.SkeletonJoint.y">
            <summary>The y axis coordinate.</summary>
        </member>
        <member name="F:SenseLib.DataFrames.Kinect.SkeletonJoint.z">
            <summary>The z axis coordinate.</summary>
        </member>
        <member name="F:SenseLib.DataFrames.Kinect.SkeletonJoint.confidence">
            <summary>The tracking confidence.</summary>
        </member>
        <member name="T:SenseLib.DataFrames.Kinect.Skeleton">
            <summary>Represents a Kinect skeleton joint.</summary>
        </member>
        <member name="M:SenseLib.DataFrames.Kinect.KinectFrame.DisposeFrame">
            <summary>Releases allocated resources.</summary>
        </member>
        <member name="M:SenseLib.DataFrames.VoiceTracker.VoiceTrackerFrame.DisposeFrame">
            <summary>Releases allocated resources.</summary>
        </member>
        <member name="T:SenseLib.Acquisition.Kinect.KinectSelection">
            <summary>Denotes the data streams to be used for acquisition.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSelection.#ctor(System.Boolean)">
            <summary>Initializes all data streams with the given value.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSelection.#ctor(System.Boolean[])">
            <summary>Initializes the data streams with the given boolean array.</summary>
        </member>
        <member name="T:SenseLib.Acquisition.Kinect.KinectSenseLib">
            <summary>Contains the Kinect acquisition methods.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.#ctor">
            <summary>Library initializer.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.InitializeSensor(SenseLib.Acquisition.Kinect.KinectSelection,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>Initializes the library parameters and opens the sensor.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.DisposeKinectSenseLib">
            <summary>Closes the sensor and releases all resources.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.IsSensorAvailable(System.Int32)">
            <summary>Indicates whether the sensor is available.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.OpenSensor">
            <summary>Opens the sensor.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.CloseSensor">
            <summary>Closes the sensor.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.GetFrame">
            <summary>Requests the next frame from the sensor.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.FrameToBytes(SenseLib.DataFrames.Kinect.KinectFrame)">
            <summary>Converts the frame into a byte array.</summary>
        </member>
        <member name="M:SenseLib.Acquisition.Kinect.KinectSenseLib.BytesToFrame(System.Byte[])">
            <summary>Converts a byte array into a Kinect frame.</summary>
        </member>
        <member name="T:SenseLib.Utils.SensorType">
            <summary>The supported sensors.</summary>
        </member>
        <member name="T:SenseLib.Utils.SensorUtils">
            <summary>Provides sensor-related functions.</summary>
        </member>
        <member name="M:SenseLib.Utils.SensorUtils.EnumSensors">
            <summary>Returns the number of supported sensors.</summary>
        </member>
        <member name="M:SenseLib.Utils.SensorUtils.SensorDictionary(System.Int32)">
            <summary>Returns a dictionary with the supported sensors as keys and the given integer (default = 0) as their value.</summary>
        </member>
        <member name="M:SenseLib.Utils.SensorUtils.SensorDictionaryCount(System.Collections.Generic.Dictionary{SenseLib.Utils.SensorType,System.Int32})">
            <summary>Returns the total number of sensors in the dictionary.</summary>
        </member>
        <member name="T:SenseLib.Utils.Serialization">
            <summary>Provides methods for Serializing, Deep copying and Packaging of arbitrary objects.</summary>
        </member>
        <member name="M:SenseLib.Utils.Serialization.Serialize(System.Object)">
            <summary>Serializes the given object into a byte array using a binary format.</summary>
        </member>
        <member name="M:SenseLib.Utils.Serialization.Deserialize``1(System.Byte[])">
            <summary>De-serializes the given object into type T using a binary format.</summary>
        </member>
        <member name="M:SenseLib.Utils.Serialization.SerializeXML(System.Object)">
            <summary>Serializes the given object into a byte array using an XML format.</summary>
        </member>
        <member name="M:SenseLib.Utils.Serialization.DeserializeXML``1(System.Byte[])">
            <summary>De-serializes the given object into type T using an XML format.</summary>
        </member>
        <member name="M:SenseLib.Utils.Serialization.DeepCopy``1(``0)">
            <summary>Returns a deep copy of the given object.</summary>
        </member>
        <member name="M:SenseLib.Utils.Serialization.PackageMessage(System.Byte[])">
            <summary>Produces a byte array containing the message length and the actual message.</summary>
        </member>
        <member name="T:SenseLib.Utils.ConnectionInfo">
            <summary>Provides methods regarding network connectivity.</summary>
        </member>
        <member name="T:SenseLib.Utils.ConnectionInfo.DefaultPorts">
            <summary>Contains the default communication ports.</summary>
        </member>
        <member name="M:SenseLib.Utils.ConnectionInfo.GetConnections">
            <summary>Returns a list of the communication ports in use.</summary>
        </member>
        <member name="M:SenseLib.Utils.ConnectionInfo.GetRandomPort(System.Int32,System.Int32,System.Int32)">
            <summary>Returns an array of free communication ports.</summary>
        </member>
        <member name="T:SenseLib.Utils.Validation">
            <summary>Provides methods for number and region validation.</summary>
        </member>
        <member name="M:SenseLib.Utils.Validation.ValidateNumber(System.Double,System.Double,System.Double)">
            <summary>Checks that the given number is finite. If LBound is less than UBound, it also checks that the number is within the provided limits.</summary>
        </member>
        <member name="M:SenseLib.Utils.Validation.ValidateNumber(System.Single,System.Single,System.Single)">
            <summary>Checks that the given number is finite. If LBound is less than UBound, it also checks that the number is within the provided limits.</summary>
        </member>
        <member name="M:SenseLib.Utils.Validation.ValidateNumber(System.Int32,System.Int32,System.Int32)">
            <summary>Checks that the given number is less than the max value an integer can hold and greater than min value.
            If LBound is less than UBound, it also checks that the number is within the provided limits.</summary>
        </member>
        <member name="M:SenseLib.Utils.Validation.ValidateRegion(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>Checks that the given region is within the given bounds and larger than a single point.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO">
            <summary>Provides methods for data storage and retrieval.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO.FileWriter">
            <summary>Provides methods for writing data to a file.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.#ctor(System.String,System.Boolean)">
            <summary>Creates or appends to the specified file.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.#ctor(System.String,SenseLib.Utils.SensorType,System.String,System.Boolean)">
            <summary>Creates or appends to the specified file.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.WriteData(System.Byte[])">
            <summary>Writes the given binary data to the file and returns true if the operation completed successfully or false if an error occurred.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.WriteData(System.String)">
            <summary>Writes the given text to the file and returns true if the operation completed successfully or false if an error occurred.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.WriteNewLine">
            <summary>Writes the new line character to the file (when this instance is initialized with binaryData = false)
            and returns true if the operation completed successfully or false if an error occurred.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.GetErrorCount">
            <summary>Returns the number of errors that have occurred.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.GetErrors">
            <summary>Returns the logged errors.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.ClearErrors">
            <summary>Clears the logged errors.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileWriter.Close">
            <summary>Closes the file and releases resources.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO.FileReader">
            <summary>Provides methods for reading binary data from a file.</summary>
        </member>
        <member name="P:SenseLib.Utils.DataIO.FileReader.EoF">
            <summary>Marks the end of the file.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileReader.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Opens the given file, sets the read buffer size (default 25MB) and sets the frame length bounds used for validation 
            (default values are 0, meaning no validation).</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileReader.EnumFrames">
            <summary>Reads the given file until the end and returns the number of frames found.
            If the frame length exceeded the bounds or an error occurred, the return value is -1.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileReader.ReadFrame">
            <summary>Reads and returns the next frame from the file, or EoF if the end has been reached.
            If the frame length exceeded the bounds or an error occurred, the return value is null.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileReader.TryReadFrame">
            <summary>Reads and returns the next frame from the file using signature matching, or EoF if the end has been reached.
            If the frame length exceeded the bounds or an error occurred, the return value is null.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.FileReader.Close">
            <summary>Closes the file and releases resources.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO.DBWriter">
            <summary>Provides methods for writing data to a MongoDB database.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.#ctor(System.String)">
            <summary>Connects to the given MongoDB database.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.IsConnected(System.Int32)">
            <summary>Checks the connection status.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.WriteBinaryData(SenseLib.Utils.SensorType,System.DateTime,System.String,System.String,System.Byte[])">
            <summary>Writes the given binary data to the database.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.WriteData(SenseLib.Utils.SensorType,System.DateTime,System.String,System.String,System.Object)">
            <summary>Writes the given sensor frame to the database.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.WriteBandPersonIDs(System.DateTime,System.DateTime,System.String,SenseLib.Utils.SensorType,System.String,System.String)">
            <summary>Writes the band ids and person ids to the database.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.GetErrorCount">
            <summary>Returns the number of errors that have occurred.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.GetErrors">
            <summary>Returns the logged errors.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBWriter.ClearErrors">
            <summary>Clears the logged errors.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO.DBReader">
            <summary>Provides methods for retrieving data from a MongoDB database.</summary>
        </member>
        <member name="P:SenseLib.Utils.DataIO.DBReader.DatabaseName">
            <summary>The database name.</summary>
        </member>
        <member name="P:SenseLib.Utils.DataIO.DBReader.EoF">
            <summary>Denotes the 'end of file' document (i.e., the database has no more documents for reading).</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.#ctor(System.String)">
            <summary>Connects to the given MongoDB database.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.IsConnected(System.Int32)">
            <summary>Checks the connection status.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.GetCollections">
            <summary>Returns the available database collections.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.ClearFilter">
            <summary>Clears any filtering criteria.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.EnumDocuments(SenseLib.Utils.SensorType)">
            <summary>Enumerates the available documents.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.QueryDB(SenseLib.Utils.SensorType,System.DateTime,System.DateTime)">
            <summary>Queries the database for documents that match the provided timespan.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.QueryDB(SenseLib.Utils.SensorType,System.String)">
            <summary>Queries the database for documents that match the provided session.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.Distinct(SenseLib.Utils.SensorType,System.String)">
            <summary>Returns the distinct values for the given field.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.EnumDocumentsWithValue(SenseLib.Utils.SensorType,System.String,System.String)">
            <summary>Enumerates the documents of the sensor table where the field has the given value.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.Exists(SenseLib.Utils.SensorType,System.String)">
            <summary>Checks if any documents exist where the given field is not null.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.ReadDocument">
            <summary>Retrieves the next document.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.ReadDocument(System.String)">
            <summary>Retrieves the next document from the specified sensor.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.UpdateDocument(System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>Updates the database labels.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.DBReader.ExtractBodyFrame(MongoDB.Bson.BsonDocument)">
            <summary>Retrieves the Kinect body frame.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO.VideoWriter">
            <summary>Provides methods for creating video files.</summary>
        </member>
        <member name="P:SenseLib.Utils.DataIO.VideoWriter.ErrorCounter">
            <summary>The number of errors during writing.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.VideoWriter.#ctor(System.String,System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes,System.Int32)">
            <summary>Creates an empty video with the specified parameters.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.VideoWriter.WriteFrame(System.Byte[],System.String)">
            <summary>Adds a frame to the video.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.VideoWriter.Close">
            <summary>Closes the video file and releases resources.</summary>
        </member>
        <member name="T:SenseLib.Utils.DataIO.Logger">
            <summary>Provides methods for creating event logs.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>Creates an instance of this class with the provided parameters.</summary>
            <param name="maxEvents"> The maximum number of events to log. Events beyond this number cause the earliest logged events to be dropped. </param>
            <param name="filename"> The full path to the output file or an empty string to denote a memory-only data storage. </param>
            <param name="includeTime"> Store time information in the logged events. </param>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.Add(System.String)">
            <summary>Appends a new event to the log.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.Add(System.Exception)">
            <summary>Appends an exception along with its stack trace to the log.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.Clear">
            <summary>Clears the logged events.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.Count">
            <summary>Returns the number of currently logged events.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.CountTotal">
            <summary>Returns the total number of events that have been processed.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.GetEvents">
            <summary>Returns a copy of the logged events.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Logger.Close">
            <summary>Closes the logger and releases resources.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.SaveJpeg(System.String,System.Byte[],System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32)">
            <summary>Saves the given data as a JPEG image.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.SaveJpeg(System.String,System.Windows.Media.Imaging.WriteableBitmap,System.Int32)">
            <summary>Saves the given data as a JPEG image.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.SavePng(System.String,System.Byte[],System.Int32,System.Int32,System.Windows.Media.PixelFormat)">
            <summary>Saves the given data as a PNG image.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.SavePng(System.String,System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>Saves the given data as a PNG image.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.Save(System.String,System.Byte[])">
            <summary>Saves the given data as a binary file.</summary>
        </member>
        <member name="M:SenseLib.Utils.DataIO.LoadImage(System.String,SenseLib.Utils.FrameOperations.ColorTypes,System.Int32@,System.Int32@)">
            <summary>Loads an image from disk.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations">
            <summary>Provides methods for manipulating images and coordinates.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.ColorTypes">
            <summary>The supported color formats.</summary>
        </member>
        <member name="F:SenseLib.Utils.FrameOperations.ColorTypes.Bgra">
            <summary>Denotes the Blue-Green-Red-Alpha color format.</summary>
        </member>
        <member name="F:SenseLib.Utils.FrameOperations.ColorTypes.Bgr">
            <summary>Denotes the Blue-Green-Red color format.</summary>
        </member>
        <member name="F:SenseLib.Utils.FrameOperations.ColorTypes.Gray16">
            <summary>Denotes the 2-channel (int16) gray-scale color format.</summary>
        </member>
        <member name="F:SenseLib.Utils.FrameOperations.ColorTypes.Gray8">
            <summary>Denotes the single channel gray-scale color format.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.TransformCoordinates">
            <summary>Provides methods for transforming 3D coordinates into different coordinate systems.</summary>
        </member>
        <member name="P:SenseLib.Utils.FrameOperations.TransformCoordinates.Rotation">
            <summary>The 3x3 rotation matrix.</summary>
        </member>
        <member name="P:SenseLib.Utils.FrameOperations.TransformCoordinates.Translation">
            <summary>The 3x1 translation matrix.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.TransformCoordinates.#ctor(System.String)">
            <summary>Loads the Rotation and Translation matrices from the given file.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.TransformCoordinates.Transform(System.Double,System.Double,System.Double)">
            <summary>Transforms the given 3D point (x, y, z) into the new coordinate system.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.TransformCoordinates.Transform(SenseLib.DataFrames.Kinect.SkeletonJoint)">
            <summary>Transforms the given skeleton joint into the new coordinate system.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.TransformCoordinates.Transform(SenseLib.DataFrames.Kinect.SkeletonJoint[])">
            <summary>Transforms the given skeleton joints into the new coordinate system.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.Display">
            <summary>Provides image visualization functionality.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Display.Show(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes,System.Int32,System.String)">
            <summary>Creates a window and displays the given image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Display.CloseWindow(System.String)">
            <summary>Closes a created window by name.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.Convert">
            <summary>Provides methods for converting raw bytes into different image types.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Convert.BytesToImageBgra(System.Byte[],System.Int32,System.Int32)">
            <summary>Converts bytes into a BGRA image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Convert.BytesToImageBgr(System.Byte[],System.Int32,System.Int32)">
            <summary>Converts bytes into a BGR image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Convert.BytesToImageGray16(System.Byte[],System.Int32,System.Int32)">
            <summary>Converts bytes into a Gray16 image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Convert.BytesToImageGray8(System.Byte[],System.Int32,System.Int32)">
            <summary>Converts bytes into a Gray image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Convert.BytesToBitmap(System.Byte[],System.Int32,System.Int32,System.Windows.Media.PixelFormat)">
            <summary>Converts bytes into a WriteableBitmap.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Convert.ColorToGray(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes)">
            <summary>Converts bytes that represent a BGRA or BGR image into bytes that represent a Gray image.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.Compress">
            <summary>Provides methods for data compression.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.CompressJPEG(System.Byte[],System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32)">
            <summary>Compresses the given bytes with the JPEG algorithm (Lossy).</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.CompressPNG(System.Byte[],System.Int32,System.Int32,System.Windows.Media.PixelFormat)">
            <summary>Compresses the given bytes with the PNG algorithm (Lossless).</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.CompressZSTD(System.Byte[],System.Int32,System.Byte[])">
            <summary>Compresses the given bytes with Facebook's ZSTD algorithm (Lossless).</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.BuildDictionaryZSTD(System.Collections.Generic.List{System.Byte[]},System.Int32)">
            <summary>Builds a dictionary for the ZSTD algorithm.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.ReadDictionaryZSTD(System.String)">
            <summary>Reads a dictionary for the ZSTD algorithm.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.SaveDictionaryZSTD(System.String,System.Byte[])">
            <summary>Saves a dictionary for the ZSTD algorithm.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Compress.CompressImage(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes,System.Int32)">
            <summary>Compresses color images using JPEG and gray images using ZSTD.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.Decompress">
            <summary>Provides methods for data decompression.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Decompress.DecompressJPEG(System.Byte[],System.Int32@,System.Int32@,System.Windows.Media.PixelFormat)">
            <summary>Decompresses the given bytes with the JPEG algorithm.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Decompress.DecompressPNG(System.Byte[],System.Int32@,System.Int32@,System.Windows.Media.PixelFormat)">
            <summary>Decompresses the given bytes with the PNG algorithm.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Decompress.DecompressZSTD(System.Byte[],System.Byte[])">
            <summary>Decompresses the given bytes with Facebook's ZSTD algorithm.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Decompress.DecompressImage(System.Byte[],System.Int32@,System.Int32@,SenseLib.Utils.FrameOperations.ColorTypes)">
            <summary>Decompresses image data using the appropriate algorithm inferred from the metadata.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Decompress.IsJPEG(System.Byte[])">
            <summary>Determines if the given bytes correspond to a JPEG compressed image.</summary>
        </member>
        <member name="T:SenseLib.Utils.FrameOperations.Transform">
            <summary>Provides image transformation methods.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.MeanAbsoluteError(System.Byte[],System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes)">
            <summary>Computes the mean absolute error (MAE) between two images.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.DeleteAlphaChannel(System.Byte[],System.Int32,System.Int32)">
            <summary>Deletes the alpha channel from a BGRA image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.Gray16ToGray8(System.Byte[],System.Int32,System.Int32)">
            <summary>Converts a 2 channel Gray image (Gray16) into a single channel Gray image (Gray8).</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ReduceFidelity(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes,System.Int32)">
            <summary>Reduces the fidelity of an image in such a way that each pixel in the resulting image is changed by at most maxError.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.GammaCorrection(System.Byte[],System.Int32,System.Int32,System.Double)">
            <summary>Performs gamma correction on the given gray16 image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.SkeletonToColor(SenseLib.DataFrames.Kinect.KinectFrame,SenseLib.Utils.FrameOperations.ColorTypes,System.Boolean,System.Int32)">
            <summary>Draws the Kinect skeleton onto a color (BGRA or BGR) image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.TextToColor(System.Byte[],SenseLib.DataFrames.Kinect.KinectFrame,System.String,System.Boolean,System.Double,System.Boolean)">
            <summary>Draws text above the Kinect skeleton onto the given BGRA image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.FaceToColor(SenseLib.DataFrames.Kinect.KinectFrame,SenseLib.Utils.FrameOperations.ColorTypes,System.Int32)">
            <summary>Draws the Kinect face bounding box onto a color (BGRA or BGR) image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.SkeletonToGray(System.Byte[],SenseLib.DataFrames.Kinect.KinectFrame,SenseLib.Utils.FrameOperations.ColorTypes,System.Boolean,System.Int32)">
            <summary>Draws the Kinect skeleton onto a gray (Gray16) image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.TextToGray(System.Byte[],SenseLib.DataFrames.Kinect.KinectFrame,System.String,System.Boolean,System.Double,System.Boolean)">
            <summary>Draws text above the Kinect skeleton onto the given Gray16 image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.CircledTextToGray8(System.Byte[],System.Int32,System.Int32,System.Single,System.Single,System.Single,System.String,System.Double)">
            <summary>Draws the given text inside a circle onto a gray (Gray8) image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.FlipLR(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes)">
            <summary>Flips the given image horizontally (left-right).</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.FlipUD(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes)">
            <summary>Flips the given image vertically (up-down).</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.Scale(System.Byte[],System.Int32,System.Int32,SenseLib.Utils.FrameOperations.ColorTypes,System.Single,Emgu.CV.CvEnum.Inter)">
            <summary>Performs image scaling using the given factor and interpolation method.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleColor(System.Boolean,System.Byte[],System.Int32,System.Int32,System.Single)">
            <summary>Scales the given (BGRA) color image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleGray16(System.Boolean,System.Byte[],System.Int32,System.Int32,System.Single)">
            <summary>Scales the given gray16 image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleGray(System.Boolean,System.Byte[],System.Int32,System.Int32,System.Single)">
            <summary>Scales the given gray image.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleBodyFrame(SenseLib.DataFrames.Kinect.Body[],System.Boolean,System.Single,System.Int32,System.Int32,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>Scales the coordinates of the given body frames.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleSkeleton(SenseLib.DataFrames.Kinect.Skeleton,System.Boolean,System.Single,System.Int32,System.Int32,System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>Scales the coordinates of the given skeleton.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleJoints(SenseLib.DataFrames.Kinect.SkeletonJoint[],System.Single,System.Drawing.Rectangle)">
            <summary>Scales the coordinates of the given joints with respect to the given bounds.</summary>
        </member>
        <member name="M:SenseLib.Utils.FrameOperations.Transform.ScaleFaceBox(SenseLib.DataFrames.Kinect.FaceBox[],System.Boolean,System.Single,System.Int32,System.Int32)">
            <summary>Scales the coordinates of the given face bounding boxes with respect to the given bounds for width and height.</summary>
        </member>
    </members>
</doc>
